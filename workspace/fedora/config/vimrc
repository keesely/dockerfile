if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
   set fileencodings=ucs-bom,utf-8,latin1
endif

set nocompatible	" Use Vim defaults (much better!)
set bs=indent,eol,start		" allow backspacing over everything in insert mode
"set ai			" always set autoindenting on
"set backup		" keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more
			" than 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time

" Only do this part when compiled with support for autocommands
if has("autocmd")
  augroup fedora
  autocmd!
  " In text files, always limit the width of text to 78 characters
  " autocmd BufRead *.txt set tw=78
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal! g'\"" |
  \ endif
  " don't write swapfile on most commonly used directories for NFS mounts or USB sticks
  autocmd BufNewFile,BufReadPre /media/*,/run/media/*,/mnt/* set directory=~/tmp,/var/tmp,/tmp
  " start with spec file template
  autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec
  augroup END
endif

if has("cscope") && filereadable("/usr/bin/cscope")
   set csprg=/usr/bin/cscope
   set csto=0
   set cst
   set nocsverb
   " add any database in current directory
   if filereadable("cscope.out")
      cs add $PWD/cscope.out
   " else add database pointed to by environment
   elseif $CSCOPE_DB != ""
      cs add $CSCOPE_DB
   endif
   set csverb
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

filetype plugin on

if &term=="xterm"
     set t_Co=8
     set t_Sb=[4%dm
     set t_Sf=[3%dm
endif

" Don't wake up system with blinking cursor:
" http://www.linuxpowertop.org/known.php
let &guicursor = &guicursor . ",a:blinkon0"

"execute pathogen#infect()
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""配置多语言环境
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("multi_byte")
" UTF-8 编码
set encoding=utf-8
set termencoding=utf-8
set formatoptions+=mM
set fencs=utf-8,gbk

if v:lang =~? '^\(zh\)\|\(ja\)\|\(ko\)'
set ambiwidth=double
endif

if has("win32")
source VIMRUNTIME/delmenu.vimsourceVIMRUNTIME/menu.vim
language messages zh_CN.utf-8
endif
else
echoerr "Sorry, this version of (g)vim was not compiled with +multi_byte"
endif

"" 高亮
filetype indent on
syntax on			 "语法高亮
set cursorline "高亮当前行
set nohlsearch
"" 代码折叠
set foldmethod=indent
set foldlevel=100	"默认不折叠
"" 智能缩进
set smartindent
"使用C样式的缩进
set cindent
"高亮被搜索的句子
set hlsearch
"在搜索时，输入的词句的逐字符高亮（类似firefox的搜索）
"set incsearch
:match Todo /\k*\%#\k*/
" 缩进格式
set shiftwidth=2	"<< >> 命令宽度为2
set softtabstop=2 "删除缩进宽度为2
set tabstop=2			"tab 缩进宽度为2
" 命令标尺与行号
set number
set ruler
exec ":colorscheme slate"
"新建.c,.h,.sh,.java文件，自动插入文件头 
"autocmd BufNewFile *.cpp,*.[ch],*.sh,*.css,*.js,*.html,*.htm,*.java exec ":call SetTitle()"
autocmd BufRead *.phtml  exec ":set filetype=html"
"autocmd BufRead *.phtml  exec ":colorscheme molokai"
autocmd BufRead *.phtml  exec ":colorscheme mokee"
autocmd BufNewFile *.php exec ":set filetype=php"
autocmd BufNewFile *.py exec ":set filetype=python"
autocmd BufNewFile *.sh exec ":set filetype=sh"
autocmd BufNewFile *.css exec ":set filetype=css"
autocmd BufNewFile *.py  exec ":call SetTitlePython()"
autocmd BufNewFile *.php,*.sh,*.css,*.js,*.java  exec ":call SetTitleA()"
autocmd BufNewFile *.cpp,*.[ch] exec ":call SetTitleC()"
autocmd BufNewFile *.go exec ":call SetTitleC()"
autocmd BufNewFile *.html,*.htm exec ":call SetTitleHTML()"
""定义函数SetTitle，自动插入文件头 
func SetTitleA() 
		if &filetype == 'php'
        call setline(1,"\<?php")
        call append(line("."), "/**")
        call append(line(".")+1, " * ")
        call append(line(".")+2, " * @fileName ".expand("%"))
				call append(line(".")+3, " * @category PHP")
        call append(line(".")+4, " * @package void")
        call append(line(".")+5, " * @author Kee Guo <chinboy2012@gmail.com> ")
        call append(line(".")+6, " * @since " . strftime("%d/%m/%Y"))
        call append(line(".")+7, " * @version " . expand("%d") . ' ' . strftime("%Y.%m.%d"))
        call append(line(".")+8, " * */")
        call append(line(".")+9, "")
    "如果文件类型为.sh文件 
		elseif &filetype == 'sh' 
        call setline(1,"\#########################################################################")
        call append(line("."), "\# File Name: ".expand("%"))
        call append(line(".")+1, "\# Author: Kee")
        call append(line(".")+2, "\# mail: chinboy2012@gmail.com")
        call append(line(".")+3, "\# Created Time: ".strftime("%Y.%m.%d"))
        call append(line(".")+4, "\#########################################################################")
        call append(line(".")+5, "\#!/bin/bash")
        call append(line(".")+6, "")
		elseif &filetype == 'css'
        call setline(1,"@charset \"utf-8\";") 
        call append(line("."), "/*************************************************************************") 
        call append(line(".")+1, " * @fileName ".expand("%")) 
        call append(line(".")+2, " * @author Kee <chinboy2012@gmail.com> " . strftime("%Y.%m.%d")) 
        call append(line(".")+3, " * ***********************************************************************/") 
        call append(line(".")+4, "")
		elseif &filetype == 'js'
				call setline(1,"/*************************************************************************")  
				call append(line(".")+1, " * @fileName ".expand("%")) 
        call append(line(".")+2, " * @author Kee <chinboy2012@gmail.com> " . strftime("%Y.%m.%d")) 
        call append(line(".")+3, " * ***********************************************************************/") 
        call append(line(".")+4, "")
    else 
        call setline(1, "/*************************************************************************") 
        call append(line("."), "    > File Name: ".expand("%")) 
        call append(line(".")+1, "    > Author: Kee") 
        call append(line(".")+2, "    > Mail: chinboy2012@gmail.com ") 
        call append(line(".")+3, "    > Created Time: ".strftime("%Y.%m.%d")) 
        call append(line(".")+4, " ************************************************************************/") 
        call append(line(".")+5, "")
    endif
    "新建文件后，自动定位到文件末尾
    "autocmd BufNewFile * normal G
		"normal set fileencoding=utf-8
		"normal set encoding=utf-8
		normal G
endfunc

func SetTitleHTML () 
	if &filetype == 'html'
		call setline(1,"\<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">")
		call append(line("."), "\<html>") 
		call append(line(".")+1, "  \<head>") 
		call append(line(".")+2, "    \<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">") 
		call append(line(".")+3, "    \<meta name=\"Description\" content=\"New HTML FILE\" />")
		call append(line(".")+4, "    \<meta name=\"Keywords\" content=\"New HTML FILE\" />")
		call append(line(".")+5, "    \<title>New HTML file</title>")
		call append(line(".")+6, "  \</head>")
		call append(line(".")+7, "")
		call append(line(".")+8, "  \<body>")
		call append(line(".")+9, "    ")
		call append(line(".")+10, "  \</body>")
		call append(line(".")+11, "\</html>")
	else
		call setline(1,"\<!DOCTYPE html>")
		call append(line("."), "\<html>") 
		call append(line(".")+1, "  \<head>") 
		call append(line(".")+2, "    \<meta charset=\"utf-8\">") 
		call append(line(".")+3, "    \<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">")
		call append(line(".")+4, "    \<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">") 
		call append(line(".")+5, "    \<meta name=\"Description\" content=\"New HTML FILE\" />")
		call append(line(".")+6, "    \<meta name=\"Keywords\" content=\"key1,key2,key3\" />")
		call append(line(".")+7, "    \<title>New_HTML_file</title>")
		call append(line(".")+8, "  \</head>")
		call append(line(".")+9, "")
		call append(line(".")+10, "  \<body>")
		call append(line(".")+11, "    ")
		call append(line(".")+12, "  \</body>")
		call append(line(".")+13, "\</html>")
	endif
	exec ":set si"
	exec ":colorscheme molokai"
endfunc

func SetTitleC () 
		call setline(1, "/*************************************************************************") 
		call append(line("."), "    > File Name: ".expand("%")) 
		call append(line(".")+1, "    > Author: Kee") 
		call append(line(".")+2, "    > Mail: chinboy2012@gmail.com ") 
		call append(line(".")+3, "    > Created Time: ".strftime("%Y.%m.%d")) 
		call append(line(".")+4, " ************************************************************************/") 
		call append(line(".")+5, "")
		if &filetype == 'cpp'
        call append(line(".")+6, "#include<iostream>")
        call append(line(".")+7, "using namespace std;")
        call append(line(".")+8, "")
		elseif &filetype == 'c'
        call append(line(".")+6, "#include<stdio.h>")
        call append(line(".")+7, "")
		endif
		normal G
endfunc

func SetTitlePython () 
		call setline(1, "#!/usr/bin/env python") 
		call append(line("."), "# -*- coding: utf8 -*-") 
		call append(line(".")+1,"\#########################################################################")
		call append(line(".")+2, "\# File Name: ".expand("%"))
		call append(line(".")+3, "\# Author: Kee")
		call append(line(".")+4, "\# mail: chinboy2012@gmail.com")
		call append(line(".")+5, "\# Created Time: ".strftime("%Y.%m.%d"))
		call append(line(".")+6, "\#########################################################################")
		call append(line(".")+7, "")
		normal G
endfunc

""autocmd BufRead * exec ":Vex "

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""键盘映射
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" 关闭行号及使用粘贴模式
nnoremap <F2> :set nonumber!<CR>:set foldcolumn=0<CR>
set pastetoggle=<F3>

" 映射全选+复制 ctrl+a
map <C-a> ggVGY
map! <C-a> <Esc>ggVGY

" 映射C-v
map <C-S-V> <C-v>
map <C-E> :s#^#//#g<CR>
map! <C-E> :s#^#//#g<CR>
map <F1> <Esc>
map! <F1> <Esc>
map <C-D> yyp
map! <C-D> yyp
map <C-F> <Esc>/
map! <C-F> <Esc>/
" 选中状态下 Ctrl+c 复制
vmap <C-c> "+y
" 跳到行头
map <Home> ^
"" 映射php 执行命令
map <F4> :w <CR> :!clear & php % <CR>
map <F1> :NERDTreeToggle<CR>
"set mouse=a
set colorcolumn=80
hi ColorColumn guifg=#11f0c3 guibg=#ff00ff
" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd        " Show (partial) command in status line.
"set showmatch      " Show matching brackets.
"set ignorecase     " Do case insensitive matching
"set smartcase      " Do smart case matching
"set incsearch      " Incremental search
"set autowrite      " Automatically save before commands like :next and :make
"set hidden     " Hide buffers when they are abandoned
"set mouse=a        " Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" 配置多语言环境
if has("multi_byte")
" UTF-8 编码
set encoding=utf-8
set termencoding=utf-8
set formatoptions+=mM
set fencs=utf-8,gbk

if v:lang =~? '^\(zh\)\|\(ja\)\|\(ko\)'
set ambiwidth=double
endif

if has("win32")
source VIMRUNTIME/delmenu.vimsourceVIMRUNTIME/menu.vim
language messages zh_CN.UTF-8
endif
else
echoerr "Sorry, this version of (g)vim was not compiled with +multi_byte"
endif

filetype indent on
nnoremap <F2> :set nonumber!<CR>:set foldcolumn=0<CR>
set pastetoggle=<F3>
"colorscheme kee "default
colorscheme mokee
"set smartindent "开启新行时使用智能自动缩进
set si
set shiftwidth=2 " 设定 << 和 >> 命令移动时的宽度为 2
set softtabstop=2 " 使得按退格键时可以一次删掉 2 个空格
set tabstop=2 " 设定 tab 长度为 2
set ruler
"set paste
set number
set cursorline
set nohlsearch
set foldmethod=indent
set foldlevel=100
set smartindent

"set rtp+=/usr/lib/python3.4/site-packages/powerline/bindings/vim
let g:airline_powerline_fonts=1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
"let g:Powerline_symbols="g:airline_symbols"
" These lines setup the environment to show graphics and colors correctly.
set nocompatible
set t_Co=256
let g:minBufExplForceSyntaxEnable = 1
"python3 from powerline.vim import setup as powerline_setup
"python3 powerline_setup()
"python3 del powerline_setup
if ! has('gui_running')
   set ttimeoutlen=10
   augroup FastEscape
      autocmd!
      au InsertEnter * set timeoutlen=0
      au InsertLeave * set timeoutlen=1000
   augroup END
endif
set shiftwidth=2    "<< >> 命令宽度为2
set softtabstop=2   "删除缩进宽度为2
set tabstop=2       "tab 缩进宽度为2
set ts=2
set expandtab
set laststatus=2 " Always display the statusline in all windows
set guifont=Inconsolata\ for\ Powerline:h14
set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)
" Go Lang
autocmd BufRead *.go  exec ":colorscheme mokee"
set nocompatible
syntax enable
let g:neocomplete#enable_at_startup = 0
let g:molokai_original = 1


"""""""""""""""""""""""""""""""""""""""""
""""""""""""""" VUNDLE """"""""""""""""
"""""""""""""""""""""""""""""""""""""""""
set nocompatible                " be iMproved
filetype off                    " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" let Vundle manage Vundle
Bundle 'gmarik/vundle'
"my Bundle here:
" original repos on github
"快速查找文件
Bundle 'kien/ctrlp.vim'
"xml编辑 （代码高亮？？）
Bundle 'sukima/xmledit'
"可视化Vim 的撤销列表(undolist)
Bundle 'sjl/gundo.vim'
"go语言环境
Bundle 'cespare/vim-golang'
Bundle 'fatih/vim-go'
Bundle 'majutsushi/tagbar'
Bundle 'jstemmer/gotags'
Bundle 'Shougo/neocomplete.vim'
"辅助命令
Bundle 'scrooloose/nerdcommenter'
"文件树
Bundle 'scrooloose/nerdtree'
"PHP语法
"Bundle 'folke/vim-zendcodeanalyzer'
Bundle 'scrooloose/syntastic'
"状态标签
Bundle 'Lokaltog/vim-powerline'
"..................................
" vim-scripts repos
Bundle 'YankRing.vim'
Bundle 'vcscommand.vim'
Bundle 'ShowPairs'
Bundle 'SudoEdit.vim'
Bundle 'EasyGrep'
Bundle 'VOoM'
Bundle 'VimIM'
filetype plugin indent on
"执行PHP语法检查
"let g:zcaprg = "~/public/ZendCodeAnalyzer"
let makeprg = "php -l -d error_reporting=E_ALL -d display_errors=1"
let tagbar_ctags_bin="/usr/bin/ctags"
"键盘映射
nmap <F4> :TagbarToggle<CR>

if &filetype == 'php'
  map <F5> :w <CR> :!clear && export APP_ENV=dev_Kee && php ./% <CR>
elseif &filetype == 'go'
  map <F5> :w <CR> :!clear && go build ./% <CR>
elseif &filetype == 'html'
  map <F5> :w <CR> :!clear && chromium-browser ./% <CR>
else
  map <F5> :w <CR> :!clear && export APP_ENV=dev_Kee && php ./% <CR>
endif

" powerline
"set encoding=utf-8
"set t_Co=256
set gfn=Hack\ 11

"声明类动作
func SetFunc () 
        call append(line("."), "    public function  () {") 
        call append(line(".")+1, "      ") 
        call append(line(".")+2, "  }") 
        call append(line(".")+3, "")
        "normal -1
        normal 19|
endfunc
command Func call SetFunc()

"声明注释
func SetPhPDoc () 
        call append(line("."), "/**")
        call append(line(".")+1, "* ") 
        call append(line(".")+2, "* @access ") 
        call append(line(".")+3, "* @package ") 
        call append(line(".")+4, "* @author Kee <chinboy2012@gmail.com>") 
        call append(line(".")+5, "* @param ") 
        call append(line(".")+6, "* @return ") 
        call append(line(".")+7, "* */")
        normal +2
        normal 2|
endfunc
command Phpdoc call SetPhPDoc()

autocmd BufRead *.phtml  exec ":set filetype=html"
autocmd BufRead *.vue  exec ":set filetype=html"
